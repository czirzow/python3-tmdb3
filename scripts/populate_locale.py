#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -----------------------
# Name: populate_locale.py    Helper for grabbing ISO639 and ISO3316 data
# Python Library
# Authors: Raymond Wagner and Pol Canelles
# -----------------------

from lxml.html import parse, fromstring
from os.path import join
from os import getcwd
import requests
import sys
import re

# to check if the raw_name contains a note: eg: [note <number>]
regex = re.compile(r'\[\bnote\b\s+\d{1,2}\]')


def sanitize(raw_name):
    '''Simple function to clean up the name from unwanted spaces or words'''
    if regex.search(raw_name):
        raw_name = regex.sub('', raw_name)
    raw_name = ' '.join(raw_name.split())
    return name


fpath = join(getcwd(), __file__) if not __file__.startswith('/') else __file__
fpath = join(fpath.rsplit('/', 2)[0], 'tmdb3/locales.py')

fd = open(fpath, 'r')
while True:
    line = fd.readline()
    if len(line) == 0:
        print("code endpoint not found, aborting!")
        sys.exit(1)
    if line.startswith('# ******** AUTOGENERATED LANGUAGE AND'):
        endpt = fd.tell()
        break

fd = open(fpath, 'a')
fd.seek(endpt)
fd.truncate()
fd.write('\n')

root = parse('http://www.loc.gov/standards/iso639-2/php/English_list.php')
for row in root.getroot().getchildren()[3].getchildren()[2].getchildren()[0]\
                         .getchildren()[0].getchildren()[9]:
    if row.getchildren()[0].tag == "th":
        # skip header
        continue
    if row.getchildren()[-1].text == "\xa0":
        # skip empty 639-1 code
        continue
    name, _, _, iso639_2, iso639_1 = [t.text for t in row]

    fd.write(f'Language("{iso639_1}", "{iso639_2}", "{sanitize(name)}")\n')

doc = requests.get('https://en.wikipedia.org/wiki/ISO_3166-2')
root = fromstring(doc.content)
table = root.xpath('//table[@class="wikitable sortable"]/tbody')[0]
for row in table.getchildren():
    if row[0].tag == 'th':
        # skip header
        continue
    alpha2, name = [t.text_content() for t in row[:2]]
    fd.write(f'Country("{alpha2}", "{sanitize(name)}")\n')
